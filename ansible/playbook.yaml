---
- name: Prepare nodes for k8s
  hosts: all
  become: true

  tasks:
    - name: Disable Swap
      ansible.builtin.command: swapoff -a
    - name: Load Kernel Modules
      shell: |
        cat <<EOF | tee /etc/modules-load.d/k8s.conf
        overlay
        br_netfilter
        EOF
        modprobe overlay
        modprobe br_netfilter
    - name: Set Parameters
      shell: |
        cat <<EOF | tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward                 = 1
        EOF
        sysctl --system
    - name: Install K8s packets
      shell: |
        apt-get update && apt-get install -y apt-transport-https curl
        curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
        echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list
        apt-get update
        apt-get install -y kubelet kubeadm kubectl
        apt-mark hold kubelet kubeadm kubectl
    - name: Install Dependencies
      shell: apt-get update && apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
    - name: Add docker GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg --yes
        cat <<EOF | tee /etc/apt/sources.list.d/docker.list > /dev/null
        deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable
        EOF
    - name: Install Containerd
      shell: apt-get update && apt-get install -y containerd.io
    - name: Configure Containerd
      shell: |
        containerd config default | tee /etc/containerd/config.toml
        sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
        systemctl restart containerd
        systemctl status containerd
    - name: Enable Kubelet
      shell: systemctl enable --now kubelet

- name: Init Cluster Control plane
  hosts: controlplanes
  become: true

  tasks:
    - name: Init with kubeadm
      shell: kubeadm init --pod-network-cidr=10.10.0.0/16 --apiserver-advertise-address=192.168.68.109
      ignore_errors: true
      run_once: true
    - name: Configure kubectl
      shell: |
        mkdir -p $HOME/.kube
        cp -f /etc/kubernetes/admin.conf $HOME/.kube/config
        chown $(id -u):$(id -g) $HOME/.kube/config
    - name: Generate Join cluster command
      shell: kubeadm token create --print-join-command
      register: join_command
    - name: Add join command to dummy host
      add_host:
        name: "K8S_JOIN_COMMAND"
        command: "{{ join_command.stdout }}"

- name: Join nodes to control plane
  hosts: nodes
  become: true
  ignore_errors: true
  run_once: true
  
  tasks:
    - name: Kubeadm join nodes
      shell: "{{hostvars['K8S_JOIN_COMMAND']['command']}}"

- name: Install Weave Net on control plane
  hosts: controlplanes
  become: true

  tasks:
    - name: Apply weave net
      shell: kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml
